// If your build script has some dependencies on plugins you will have to
// declare these dependencies in root project's buildscript block.
//
// @see https://docs.gradle.org/current/userguide/organizing_build_logic.html#sec:external_dependencies
//
// Unfortunately buildscript block can't be externalized into a script plugin
// so following code is going to be duplicated in build scripts of all root
// projects.
//
// @see https://discuss.gradle.org/t/how-do-i-include-buildscript-block-from-external-gradle-script/7016/2
buildscript {
    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
    dependencies {
        // This project uses Gradle Spring Boot Multi Project Plugin that wraps
        // the Gradle Spring Boot plugin and adds some more functionality.
        classpath "com.github.vkuzel:Gradle-Spring-Boot-Multi-Project-Plugin:2.4.0"
    }
}

// Spring Boot Multi Project Plugin adds Maven Central and JitPack repositories
// to all projects of this multi-project build. So it's not necessary to
// specify them separately.
//
// @see https://github.com/vkuzel/Gradle-Spring-Boot-Multi-Project-Plugin

ext {
    // You need to specify which sub-project contains SpringBootApplication
    // annotation so the plugin can apply findMainClass task properly.
    springBootProject = 'core-module'
}

apply plugin: 'spring-boot-multi-project'

dependencies {
    compile project('module1')
    compile project('module2')
    // If project A has compile dependency on B and B has compile dependency on
    // some external project then A will have this external project dependency
    // on it's classpath too. On the other hand testCompile dependencies does
    // not work this way. TestCompile dependencies are used only for testing
    // sub-project where is declared. So to be able to use a certain dependency
    // you need to declare it in every sub-project where needed.
    //
    // @see http://stackoverflow.com/questions/6023188/my-gradle-configuration-does-not-use-the-correct-classpath-during-build/10633623#10633623
    testCompile project(path: ':core-module', configuration: 'testFixturesUsageCompile')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

jar {
    baseName = 'project1'
    version = '0.0.1-SNAPSHOT'
}
